// <auto-generated />
using System;
using LiveBus;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LiveBus.Migrations
{
    [DbContext(typeof(LiveBusContext))]
    [Migration("20250319181915_AgregadoPuntoRuta")]
    partial class AgregadoPuntoRuta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LiveBus.Modelos.Autobus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RutaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RutaId");

                    b.ToTable("Autobuses", (string)null);
                });

            modelBuilder.Entity("LiveBus.Modelos.Posicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutobusId")
                        .HasColumnType("int");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AutobusId");

                    b.ToTable("Posiciones", (string)null);
                });

            modelBuilder.Entity("LiveBus.Modelos.PuntoRuta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("RutaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RutaId");

                    b.ToTable("PuntosRuta", (string)null);
                });

            modelBuilder.Entity("LiveBus.Modelos.Ruta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rutas", (string)null);
                });

            modelBuilder.Entity("LiveBus.Modelos.Autobus", b =>
                {
                    b.HasOne("LiveBus.Modelos.Ruta", "Ruta")
                        .WithMany("Autobuses")
                        .HasForeignKey("RutaId");

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("LiveBus.Modelos.Posicion", b =>
                {
                    b.HasOne("LiveBus.Modelos.Autobus", "Autobus")
                        .WithMany("Posiciones")
                        .HasForeignKey("AutobusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autobus");
                });

            modelBuilder.Entity("LiveBus.Modelos.PuntoRuta", b =>
                {
                    b.HasOne("LiveBus.Modelos.Ruta", "Ruta")
                        .WithMany("PuntosRuta")
                        .HasForeignKey("RutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("LiveBus.Modelos.Autobus", b =>
                {
                    b.Navigation("Posiciones");
                });

            modelBuilder.Entity("LiveBus.Modelos.Ruta", b =>
                {
                    b.Navigation("Autobuses");

                    b.Navigation("PuntosRuta");
                });
#pragma warning restore 612, 618
        }
    }
}
